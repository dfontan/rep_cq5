<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.roche</groupId>
  <artifactId>landingPage</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>landingPage-parent</name>
  
  
  
  <!-- IMPORTANT!!! 
  Assembly module has to be on the end 
  because there final *.zip file is created
  and then deployed on CQ sever. -->
  <modules>  	
  	<module>landingPage-docroot</module>
  	<module>landingPage-webapp</module>
  	<module>landingPage-example-content</module>
  	<module>landingPage-example-dam</module>
  	<module>landingPage-initial-content</module>
  	<module>landingPage-assembly</module>
  </modules>
  
  
  
  <properties>  	
  	<!-- 
  	This is necessary for maven-cq-plugin.
  	It should be defined globally in settings.xml.
  	These are credentials to Cq server -->
  	<!-- 
  	<crx.user></crx.user>
  	<crx.password></crx.password>
  	<instance.url><instance.url/>
  	-->
  	
  	<!-- 
  	This is necessary for maven-release-plugin.
  	It should be defined globally in settings.xml.
  	These are credentials to Svn server -->
  	<!-- scm.username></scm.username>
  	<scm.password></scm.password -->
  	
  	<framework.version>2.3.0</framework.version>  	
  </properties>
  
  
  
  <!-- This is necessary for maven-release-plugin.
  It indicates location of Svn server -->
  <scm>
	<connection>scm:svn:http://wisniewskikr.unfuddle.com/svn/wisniewskikr_test/landingPage/trunk</connection>
	<developerConnection>scm:svn:http://wisniewskikr.unfuddle.com/svn/wisniewskikr_test/landingPage/trunk</developerConnection>
	<url>file:///c:/svnFakeRepo/repo</url>
  </scm>
  
  
  
  <profiles>
		
	<!-- Creates package with webapp and docroot.
	This is default profile for CQ developers. -->
	<profile>
		<id>assembly-live</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>				
		<properties>							
			<assembly.id>cq-live</assembly.id>				
		</properties>
	</profile>
	
	<!-- Creates package with all resources -->
	<profile>
		<id>assembly-full</id>
		<properties>							
			<assembly.id>cq-full</assembly.id>				
		</properties>
	</profile>
	
	<!-- Creates package with example content -->
	<profile>
		<id>assembly-content</id>
		<properties>							
			<assembly.id>cq-content</assembly.id>				
		</properties>
	</profile>
	
	<!-- Creates package with initial content -->
	<profile>
		<id>assembly-initial</id>
		<properties>							
			<assembly.id>cq-initial</assembly.id>				
		</properties>
	</profile>
	
	<!-- PROFILES OF HOSTS -->
  	<!-- It should be defined globally in settings.xml -->
  	<!-- profile>
		<id>roche-local-author</id>				
		<properties>							
			<crx.url>http://localhost:4502</crx.url>				
		</properties>
	</profile>
	
	<profile>
		<id>roche-local-publish</id>		
		<properties>							
			<crx.url>http://localhost:4503</crx.url>				
		</properties>
	</profile -->
	
	<!-- This profile is automatically called by maven-release-plugin.
	So output of release is assembly *.zip file -->
	<profile>
		<id>release</id>
		<build>
			<pluginManagement>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
                                  <descriptor>src/main/assembly/cq-live.xml</descriptor>
                               </descriptors>            
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
		</build>
	</profile>
	
  </profiles>
  
  
  
  <build>		
		
		<pluginManagement>		
			<plugins>
			
				<!-- Plugin creating manifest file -->
				<plugin>
	  				<groupId>org.apache.felix</groupId>
	  				<artifactId>maven-bundle-plugin</artifactId>
	  				<version>1.4.3</version>
	  				<extensions>true</extensions>
	  				<configuration>
	  					<instructions>
	  						<Bundle-Name>${project.artifactId}</Bundle-Name>
	  						<Bundle-SymbolicName>${project.groupId}</Bundle-SymbolicName>
	  						<Bundle-Version>${maven.build.timestamp}</Bundle-Version> 
	  						<Export-Package>com.roche.*</Export-Package>
	  					</instructions>
	  				</configuration>
	  			</plugin>
			  			  			
	  			<!-- Plugin creating file *.zip with bundle for cq.
	  			It requires assembly xml files. -->
	  			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<descriptors>
							<descriptor>src/main/assembly/${assembly.id}.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>${assembly.id}</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- Plugin installing package on CQ server.
				It requires maven command: cq:install -->
				<plugin>
					<groupId>com.cognifide.cq.maven.plugins</groupId>
					<artifactId>maven-cq-plugin</artifactId>
					<version>1.0.4</version>
					<configuration>
						<skip>false</skip>
						<runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
						<packageFileName>${project.build.directory}/${project.build.finalName}-${assembly.id}.zip</packageFileName>
						<packageName>${project.artifactId}</packageName>
						<cqUrl>${instance.url}</cqUrl>
						<user>${crx.user}</user>
						<password>${crx.password}</password>
					</configuration>
				</plugin>
				
				<!-- This is release plugin. When you release project
				it creates tag in Svn, increases version and build
				package without SNAPSHOT -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.2.2</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>false</useReleaseProfile>
						<preparationGoals>clean verify install</preparationGoals>
						<goals>deploy</goals>
						<arguments>-Prelease</arguments>
					</configuration>
				</plugin>								
			
			</plugins>		
		</pluginManagement>
		
		
		
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			
			<!-- This plugin is necessary for every build
			but it can be skipped and run only when is needed -->
			<plugin>
				<groupId>com.cognifide.cq.maven.plugins</groupId>
				<artifactId>maven-cq-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			
			<!-- This is release plugin. When you release project
			it creates tag in Svn, increases version and build
			package without SNAPSHOT -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<username>${scm.username}</username>
					<password>${scm.password}</password>
				</configuration>
			</plugin>			
			  						  
		</plugins>		
		  						  
  </build>
  
  
  
  <dependencyManagement>
  
  	<dependencies> 		
		
		<!-- Dependencies of Sling -->
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.api</artifactId>
			<version>2.2.0</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Dependencies of Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Dependencies with Presenter, Model and Dto -->
		<dependency>
			<groupId>com.cognifide.cq</groupId>
			<artifactId>framework-54-api</artifactId>
			<version>${framework.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.cognifide.cq</groupId>
			<artifactId>framework-54-core</artifactId>
			<version>${framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cognifide.cq</groupId>
			<artifactId>framework-54-taglib</artifactId>
			<version>${framework.version}</version>
		</dependency>
		
		<!-- Dependency with StringUtils -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		
	</dependencies>	
  
  </dependencyManagement>
  
  
  
  <!-- 
  This is necessery for release:perform.
  Then package with previous version is build.
   -->
  <distributionManagement>
        <repository>
            <id>fakerepo</id>
            <name>Local file system</name>
            <url>file:///c:/svnFakeRepo/repo</url>
        </repository>
        <snapshotRepository>
            <id>fakesnapshotrepo</id>
            <name>Local file system</name>
            <url>file:///c:/svnFakeRepo/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
      
  
  
</project>